package kv

const (
	pathBackends                                = "/backends/"
	pathBackendCircuitBreakerExpression         = "/circuitbreaker/expression"
	pathBackendHealthCheckScheme                = "/healthcheck/scheme"
	pathBackendHealthCheckPath                  = "/healthcheck/path"
	pathBackendHealthCheckPort                  = "/healthcheck/port"
	pathBackendHealthCheckInterval              = "/healthcheck/interval"
	pathBackendHealthCheckHostname              = "/healthcheck/hostname"
	pathBackendHealthCheckHeaders               = "/healthcheck/headers/"
	pathBackendLoadBalancerMethod               = "/loadbalancer/method"
	pathBackendLoadBalancerSticky               = "/loadbalancer/sticky"
	pathBackendLoadBalancerStickiness           = "/loadbalancer/stickiness"
	pathBackendLoadBalancerStickinessCookieName = "/loadbalancer/stickiness/cookiename"
	pathBackendMaxConnAmount                    = "/maxconn/amount"
	pathBackendMaxConnExtractorFunc             = "/maxconn/extractorfunc"
	pathBackendServers                          = "/servers/"
	pathBackendServerURL                        = "/url"
	pathBackendServerWeight                     = "/weight"
	pathBackendBuffering                        = "/buffering/"
	pathBackendBufferingMaxResponseBodyBytes    = pathBackendBuffering + "maxresponsebodybytes"
	pathBackendBufferingMemResponseBodyBytes    = pathBackendBuffering + "memresponsebodybytes"
	pathBackendBufferingMaxRequestBodyBytes     = pathBackendBuffering + "maxrequestbodybytes"
	pathBackendBufferingMemRequestBodyBytes     = pathBackendBuffering + "memrequestbodybytes"
	pathBackendBufferingRetryExpression         = pathBackendBuffering + "retryexpression"

	pathFrontends                         = "/frontends/"
	pathFrontendBackend                   = "/backend"
	pathFrontendPriority                  = "/priority"
	pathFrontendPassHostHeaderDeprecated  = "/passHostHeader" // Deprecated
	pathFrontendPassHostHeader            = "/passhostheader"
	pathFrontendPassTLSCert               = "/passtlscert"
	pathFrontendWhiteListSourceRange      = "/whitelist/sourcerange"
	pathFrontendWhiteListUseXForwardedFor = "/whitelist/usexforwardedfor"
	pathFrontendBasicAuth                 = "/basicauth"
	pathFrontendEntryPoints               = "/entrypoints"
	pathFrontendRedirectEntryPoint        = "/redirect/entrypoint"
	pathFrontendRedirectRegex             = "/redirect/regex"
	pathFrontendRedirectReplacement       = "/redirect/replacement"
	pathFrontendRedirectPermanent         = "/redirect/permanent"
	pathFrontendErrorPages                = "/errors/"
	pathFrontendErrorPagesBackend         = "/backend"
	pathFrontendErrorPagesQuery           = "/query"
	pathFrontendErrorPagesStatus          = "/status"
	pathFrontendRateLimit                 = "/ratelimit/"
	pathFrontendRateLimitRateSet          = pathFrontendRateLimit + "rateset/"
	pathFrontendRateLimitExtractorFunc    = pathFrontendRateLimit + "extractorfunc"
	pathFrontendRateLimitPeriod           = "/period"
	pathFrontendRateLimitAverage          = "/average"
	pathFrontendRateLimitBurst            = "/burst"

	pathFrontendCustomRequestHeaders    = "/headers/customrequestheaders/"
	pathFrontendCustomResponseHeaders   = "/headers/customresponseheaders/"
	pathFrontendAllowedHosts            = "/headers/allowedhosts"
	pathFrontendHostsProxyHeaders       = "/headers/hostsproxyheaders"
	pathFrontendSSLForceHost            = "/headers/sslforcehost"
	pathFrontendSSLRedirect             = "/headers/sslredirect"
	pathFrontendSSLTemporaryRedirect    = "/headers/ssltemporaryredirect"
	pathFrontendSSLHost                 = "/headers/sslhost"
	pathFrontendSSLProxyHeaders         = "/headers/sslproxyheaders/"
	pathFrontendSTSSeconds              = "/headers/stsseconds"
	pathFrontendSTSIncludeSubdomains    = "/headers/stsincludesubdomains"
	pathFrontendSTSPreload              = "/headers/stspreload"
	pathFrontendForceSTSHeader          = "/headers/forcestsheader"
	pathFrontendFrameDeny               = "/headers/framedeny"
	pathFrontendCustomFrameOptionsValue = "/headers/customframeoptionsvalue"
	pathFrontendContentTypeNosniff      = "/headers/contenttypenosniff"
	pathFrontendBrowserXSSFilter        = "/headers/browserxssfilter"
	pathFrontendCustomBrowserXSSValue   = "/headers/custombrowserxssvalue"
	pathFrontendContentSecurityPolicy   = "/headers/contentsecuritypolicy"
	pathFrontendPublicKey               = "/headers/publickey"
	pathFrontendReferrerPolicy          = "/headers/referrerpolicy"
	pathFrontendIsDevelopment           = "/headers/isdevelopment"

	pathFrontendRoutes = "/routes/"
	pathFrontendRule   = "/rule"

	pathTLS            = "/tls/"
	pathTLSEntryPoints = "/entrypoints"
	pathTLSCertFile    = "/certificate/certfile"
	pathTLSKeyFile     = "/certificate/keyfile"

	pathTags      = "/tags"
	pathAlias     = "/alias"
	pathSeparator = "/"
)

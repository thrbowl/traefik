[Global]
  Debug = true
  CheckNewVersion = true
  SendAnonymousUsage = true

[ServersTransport]
  InsecureSkipVerify = true
  RootCAs = ["foobar", "foobar"]
  MaxIdleConnsPerHost = 42
  [ServersTransport.ForwardingTimeouts]
    DialTimeout = 42
    ResponseHeaderTimeout = 42

[EntryPoints]

  [EntryPoints.EntryPoint0]
    Address = "foobar"
    [EntryPoints.EntryPoint0.Transport]
      [EntryPoints.EntryPoint0.Transport.LifeCycle]
        RequestAcceptGraceTimeout = 42
        GraceTimeOut = 42
      [EntryPoints.EntryPoint0.Transport.RespondingTimeouts]
        ReadTimeout = 42
        WriteTimeout = 42
        IdleTimeout = 42
    [EntryPoints.EntryPoint0.ProxyProtocol]
      Insecure = true
      TrustedIPs = ["foobar", "foobar"]
    [EntryPoints.EntryPoint0.ForwardedHeaders]
      Insecure = true
      TrustedIPs = ["foobar", "foobar"]

[Providers]
  ProvidersThrottleDuration = 42

  [Providers.Docker]
    Watch = true
    Endpoint = "foobar"
    DefaultRule = "foobar"
    ExposedByDefault = true
    UseBindPortIP = true
    SwarmMode = true
    Network = "foobar"
    SwarmModeRefreshSeconds = 42

    [[Providers.Docker.Constraints]]
      Key = "foobar"
      MustMatch = true
      Value = "foobar"

    [[Providers.Docker.Constraints]]
      Key = "foobar"
      MustMatch = true
      Value = "foobar"

    [Providers.Docker.TLS]
      CA = "foobar"
      CAOptional = true
      Cert = "foobar"
      Key = "foobar"
      InsecureSkipVerify = true

  [Providers.File]
    Directory = "foobar"
    Watch = true
    Filename = "foobar"
    DebugLogGeneratedTemplate = true
    TraefikFile = "foobar"

  [Providers.Marathon]
    Trace = true
    Watch = true
    Endpoint = "foobar"
    DefaultRule = "foobar"
    ExposedByDefault = true
    DCOSToken = "foobar"
    DialerTimeout = 42
    ResponseHeaderTimeout = 42
    TLSHandshakeTimeout = 42
    KeepAlive = 42
    ForceTaskHostname = true
    RespectReadinessChecks = true

    [[Providers.Marathon.Constraints]]
      Key = "foobar"
      MustMatch = true
      Value = "foobar"

    [[Providers.Marathon.Constraints]]
      Key = "foobar"
      MustMatch = true
      Value = "foobar"

    [Providers.Marathon.TLS]
      CA = "foobar"
      CAOptional = true
      Cert = "foobar"
      Key = "foobar"
      InsecureSkipVerify = true
    [Providers.Marathon.Basic]
      HTTPBasicAuthUser = "foobar"
      HTTPBasicPassword = "foobar"

  [Providers.Kubernetes]
    Endpoint = "foobar"
    Token = "foobar"
    CertAuthFilePath = "foobar"
    DisablePassHostHeaders = true
    Namespaces = ["foobar", "foobar"]
    LabelSelector = "foobar"
    IngressClass = "foobar"
    [Providers.Kubernetes.IngressEndpoint]
      IP = "foobar"
      Hostname = "foobar"
      PublishedService = "foobar"

  [Providers.KubernetesCRD]
    Endpoint = "foobar"
    Token = "foobar"
    CertAuthFilePath = "foobar"
    DisablePassHostHeaders = true
    Namespaces = ["foobar", "foobar"]
    LabelSelector = "foobar"
    IngressClass = "foobar"

  [Providers.Rest]
    EntryPoint = "foobar"

  [Providers.Rancher]
    Watch = true
    DefaultRule = "foobar"
    ExposedByDefault = true
    EnableServiceHealthFilter = true
    RefreshSeconds = 42
    IntervalPoll = true
    Prefix = "foobar"

    [[Providers.Rancher.Constraints]]
      Key = "foobar"
      MustMatch = true
      Value = "foobar"

    [[Providers.Rancher.Constraints]]
      Key = "foobar"
      MustMatch = true
      Value = "foobar"

[API]
  EntryPoint = "foobar"
  Dashboard = true
  Middlewares = ["foobar", "foobar"]
  [API.Statistics]
    RecentErrors = 42

[Metrics]

  [Metrics.Prometheus]
    Buckets = [42.0, 42.0]
    EntryPoint = "foobar"
    Middlewares = ["foobar", "foobar"]

  [Metrics.Datadog]
    Address = "foobar"
    PushInterval = "10s"

  [Metrics.StatsD]
    Address = "foobar"
    PushInterval = "10s"

  [Metrics.InfluxDB]
    Address = "foobar"
    Protocol = "foobar"
    PushInterval = "10s"
    Database = "foobar"
    RetentionPolicy = "foobar"
    Username = "foobar"
    Password = "foobar"

[Ping]
  EntryPoint = "foobar"
  Middlewares = ["foobar", "foobar"]

[Log]
  Level = "foobar"
  FilePath = "foobar"
  Format = "foobar"

[AccessLog]
  FilePath = "foobar"
  Format = "foobar"
  BufferingSize = 42
  [AccessLog.Filters]
    StatusCodes = ["foobar", "foobar"]
    RetryAttempts = true
    MinDuration = 42
  [AccessLog.Fields]
    DefaultMode = "foobar"
    [AccessLog.Fields.Names]
      name0 = "foobar"
      name1 = "foobar"
    [AccessLog.Fields.Headers]
      DefaultMode = "foobar"
      [AccessLog.Fields.Headers.Names]
        name0 = "foobar"
        name1 = "foobar"

[Tracing]
  ServiceName = "foobar"
  SpanNameLimit = 42

  [Tracing.Jaeger]
    SamplingServerURL = "foobar"
    SamplingType = "foobar"
    SamplingParam = 42.0
    LocalAgentHostPort = "foobar"
    Gen128Bit = true
    Propagation = "foobar"
    TraceContextHeaderName = "foobar"

  [Tracing.Zipkin]
    HTTPEndpoint = "foobar"
    SameSpan = true
    ID128Bit = true
    Debug = true
    SampleRate = 42.0

  [Tracing.DataDog]
    LocalAgentHostPort = "foobar"
    GlobalTag = "foobar"
    Debug = true
    PrioritySampling = true
    TraceIDHeaderName = "foobar"
    ParentIDHeaderName = "foobar"
    SamplingPriorityHeaderName = "foobar"
    BagagePrefixHeaderName = "foobar"

  [Tracing.Instana]
    LocalAgentHost = "foobar"
    LocalAgentPort = 42
    LogLevel = "foobar"

  [Tracing.Haystack]
    GlobalTag = "foobar"
    LocalAgentHost = "foobar"
    LocalAgentPort = 42
    ParentIDHeaderName = "foobar"
    SpanIDHeaderName = "foobar"
    TraceIDHeaderName = "foobar"

[HostResolver]
  CnameFlattening = true
  ResolvConfig = "foobar"
  ResolvDepth = 42

[ACME]
  Email = "foobar"
  ACMELogging = true
  CAServer = "foobar"
  Storage = "foobar"
  EntryPoint = "foobar"
  KeyType = "foobar"
  OnHostRule = true

  [ACME.DNSChallenge]
    Provider = "foobar"
    DelayBeforeCheck = 42
    Resolvers = ["foobar", "foobar"]
    DisablePropagationCheck = true

  [ACME.HTTPChallenge]
    EntryPoint = "foobar"

  [ACME.TLSChallenge]

  [[ACME.Domains]]
    Main = "foobar"
    SANs = ["foobar", "foobar"]

  [[ACME.Domains]]
    Main = "foobar"
    SANs = ["foobar", "foobar"]

#### Dynamic configuration

[HTTP]

  [HTTP.Routers]

    [HTTP.Routers.Router0]
      EntryPoints = ["foobar", "foobar"]
      Middlewares = ["foobar", "foobar"]
      Service = "foobar"
      Rule = "foobar"
      priority = 42
      [HTTP.Routers.Router0.tls]

  [HTTP.Middlewares]

      [HTTP.Middlewares.Middleware0.AddPrefix]
        Prefix = "foobar"

      [HTTP.Middlewares.Middleware1.StripPrefix]
        Prefixes = ["foobar", "foobar"]

      [HTTP.Middlewares.Middleware2.StripPrefixRegex]
        Regex = ["foobar", "foobar"]

      [HTTP.Middlewares.Middleware3.ReplacePath]
        Path = "foobar"

      [HTTP.Middlewares.Middleware4.ReplacePathRegex]
        Regex = "foobar"
        Replacement = "foobar"

      [HTTP.Middlewares.Middleware5.Chain]
        Middlewares = ["foobar", "foobar"]

      [HTTP.Middlewares.Middleware6.IPWhiteList]
        SourceRange = ["foobar", "foobar"]

        [HTTP.Middlewares.Middleware7.IPWhiteList.IPStrategy]
          Depth = 42
          ExcludedIPs = ["foobar", "foobar"]

      [HTTP.Middlewares.Middleware8.Headers]
        AccessControlAllowCredentials = true
        AccessControlAllowHeaders = ["foobar", "foobar"]
        AccessControlAllowMethods = ["foobar", "foobar"]
        AccessControlAllowOrigin = "foobar"
        AccessControlExposeHeaders = ["foobar", "foobar"]
        AccessControlMaxAge = 42
        AddVaryHeader = true
        AllowedHosts = ["foobar", "foobar"]
        HostsProxyHeaders = ["foobar", "foobar"]
        SSLRedirect = true
        SSLTemporaryRedirect = true
        SSLHost = "foobar"
        SSLForceHost = true
        STSSeconds = 42
        STSIncludeSubdomains = true
        STSPreload = true
        ForceSTSHeader = true
        FrameDeny = true
        CustomFrameOptionsValue = "foobar"
        ContentTypeNosniff = true
        BrowserXSSFilter = true
        CustomBrowserXSSValue = "foobar"
        ContentSecurityPolicy = "foobar"
        PublicKey = "foobar"
        ReferrerPolicy = "foobar"
        IsDevelopment = true
        [HTTP.Middlewares.Middleware8.Headers.CustomRequestHeaders]
          name0 = "foobar"
          name1 = "foobar"
        [HTTP.Middlewares.Middleware8.Headers.CustomResponseHeaders]
          name0 = "foobar"
          name1 = "foobar"
        [HTTP.Middlewares.Middleware8.Headers.SSLProxyHeaders]
          name0 = "foobar"
          name1 = "foobar"

      [HTTP.Middlewares.Middleware9.Errors]
        Status = ["foobar", "foobar"]
        Service = "foobar"
        Query = "foobar"

      [HTTP.Middlewares.Middleware10.RateLimit]
        ExtractorFunc = "foobar"
        [HTTP.Middlewares.Middleware10.RateLimit.RateSet]
          [HTTP.Middlewares.Middleware10.RateLimit.RateSet.Rate0]
            Period = 42
            Average = 42
            Burst = 42
          [HTTP.Middlewares.Middleware10.RateLimit.RateSet.Rate1]
            Period = 42
            Average = 42
            Burst = 42

      [HTTP.Middlewares.Middleware11.RedirectRegex]
        Regex = "foobar"
        Replacement = "foobar"
        Permanent = true

      [HTTP.Middlewares.Middleware12.RedirectScheme]
        Scheme = "foobar"
        Port = "foobar"
        Permanent = true

      [HTTP.Middlewares.Middleware13.BasicAuth]
        Users = ["foobar", "foobar"]
        UsersFile = "foobar"
        Realm = "foobar"
        RemoveHeader = true
        HeaderField = "foobar"

      [HTTP.Middlewares.Middleware14.DigestAuth]
        Users = ["foobar", "foobar"]
        UsersFile = "foobar"
        RemoveHeader = true
        Realm = "foobar"
        HeaderField = "foobar"

      [HTTP.Middlewares.Middleware15.ForwardAuth]
        Address = "foobar"
        TrustForwardHeader = true
        AuthResponseHeaders = ["foobar", "foobar"]
        [HTTP.Middlewares.Middleware15.ForwardAuth.TLS]
          CA = "foobar"
          CAOptional = true
          Cert = "foobar"
          Key = "foobar"
          InsecureSkipVerify = true

      [HTTP.Middlewares.Middleware16.MaxConn]
        Amount = 42
        ExtractorFunc = "foobar"

      [HTTP.Middlewares.Middleware17.Buffering]
        MaxRequestBodyBytes = 42
        MemRequestBodyBytes = 42
        MaxResponseBodyBytes = 42
        MemResponseBodyBytes = 42
        RetryExpression = "foobar"

      [HTTP.Middlewares.Middleware18.CircuitBreaker]
        Expression = "foobar"

      [HTTP.Middlewares.Middleware19.Compress]

      [HTTP.Middlewares.Middleware20.PassTLSClientCert]
        PEM = true
        [HTTP.Middlewares.Middleware20.PassTLSClientCert.Info]
          NotAfter = true
          NotBefore = true
          Sans = true
          [HTTP.Middlewares.Middleware20.PassTLSClientCert.Info.Subject]
            Country = true
            Province = true
            Locality = true
            Organization = true
            CommonName = true
            SerialNumber = true
            DomainComponent = true
          [HTTP.Middlewares.Middleware20.PassTLSClientCert.Info.Issuer]
            Country = true
            Province = true
            Locality = true
            Organization = true
            CommonName = true
            SerialNumber = true
            DomainComponent = true

      [HTTP.Middlewares.Middleware21.Retry]
        Attempts = 42

  [HTTP.Services]
    [HTTP.Services.Service0]
      [HTTP.Services.Service0.LoadBalancer]
        Method = "foobar"
        PassHostHeader = true

        [[HTTP.Services.Service0.LoadBalancer.Servers]]
          URL = "foobar"

        [HTTP.Services.Service0.LoadBalancer.Stickiness]
          CookieName = "foobar"

        [[HTTP.Services.Service0.LoadBalancer.Servers]]
          URL = "foobar"

        [HTTP.Services.Service0.LoadBalancer.HealthCheck]
          Scheme = "foobar"
          Path = "foobar"
          Port = 42
          Interval = "foobar"
          Timeout = "foobar"
          Hostname = "foobar"
          [HTTP.Services.Service0.LoadBalancer.HealthCheck.Headers]
            name0 = "foobar"
            name1 = "foobar"
        [HTTP.Services.Service0.LoadBalancer.ResponseForwarding]
          FlushInterval = "foobar"

[TCP]

  [TCP.Routers]

    [TCP.Routers.TCPRouter0]
      EntryPoints = ["foobar", "foobar"]
      Service = "foobar"
      Rule = "foobar"
      [TCP.Routers.TCPRouter0.tls]
        passthrough = true

  [TCP.Services]

    [TCP.Services.TCPService0]
      [TCP.Services.TCPService0.LoadBalancer]
        Method = "foobar"

        [[TCP.Services.TCPService0.LoadBalancer.Servers]]
          Address = "foobar"

        [[TCP.Services.TCPService0.LoadBalancer.Servers]]
          Address = "foobar"

[[TLS.Certificates]]
  Stores = ["foobar", "foobar"]
  CertFile = "foobar"
  KeyFile = "foobar"

[[TLS.Certificates]]
  Stores = ["foobar", "foobar"]
  CertFile = "foobar"
  KeyFile = "foobar"

[TLS.Options]

  [TLS.Options.TLS0]
    MinVersion = "foobar"
    CipherSuites = ["foobar", "foobar"]
    SniStrict = true
    [TLS.Options.TLS0.ClientCA]
      Files = ["foobar", "foobar"]
      Optional = true
  [TLS.Options.TLS1]
    MinVersion = "foobar"
    CipherSuites = ["foobar", "foobar"]
    SniStrict = true
    [TLS.Options.TLS1.ClientCA]
      Files = ["foobar", "foobar"]
      Optional = true

[TLS.Stores]

  [TLS.Stores.Store0]
    [TLS.Stores.Store0.DefaultCertificate]
      CertFile = "foobar"
      KeyFile = "foobar"
  [TLS.Stores.Store1]
    [TLS.Stores.Store1.DefaultCertificate]
      CertFile = "foobar"
      KeyFile = "foobar"
